DROP VIEW BUSINESS_REVIEWS_VIEW;
CREATE VIEW BUSINESS_REVIEWS_VIEW AS SELECT b.BUSINESS_ID, b.NAME_DESC as NAME, AVG(r.STARS) as AVERAGE_RATING, COUNT(*) as REVIEW_COUNT FROM REVIEWS r JOIN BUSINESS b ON r.BUSINESS_ID = b.BUSINESS_ID GROUP BY b.BUSINESS_ID, b.NAME_DESC;

--QUERY 1: user picks city, picks stars and program generates stars breakdown and percentile (calculated on python end)

SELECT STARS, COUNT(*) AS STAR_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' GROUP BY STARS ORDER BY STARS;
SELECT COUNT(*) AS CITY_REVIEW_COUNT FROM BUSINESS WHERE CITY = 'Las Vegas';

SELECT AVG(STARS) FROM BUSINESS WHERE CITY = 'Las Vegas';

--QUERY 2: search average stars by franchise

SELECT 'SPRINT' AS STORE_NAME, AVG(STARS), COUNT(*) FROM BUSINESS WHERE NAME_DESC Like '%Sprint%' GROUP BY 'SPRINT';

--QUERY 3: user picks city, picks reviews, each statement is for range increment 100, last is total to calculate average

SELECT '100' AS REVIEW_RANGE, COUNT(*) AS REVIEW_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' and REVIEW_COUNT < 101 GROUP BY '100';
SELECT '200' AS REVIEW_RANGE, COUNT(*) AS REVIEW_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' and REVIEW_COUNT BETWEEN 101 AND 200 GROUP BY '200';
SELECT '300' AS REVIEW_RANGE, COUNT(*) AS REVIEW_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' and REVIEW_COUNT BETWEEN 201 AND 300 GROUP BY '300';
SELECT '400' AS REVIEW_RANGE, COUNT(*) AS REVIEW_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' and REVIEW_COUNT BETWEEN 301 AND 400 GROUP BY '400';
SELECT '500' AS REVIEW_RANGE, COUNT(*) AS REVIEW_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' and REVIEW_COUNT BETWEEN 401 AND 500 GROUP BY '500';
SELECT '600' AS REVIEW_RANGE, COUNT(*) AS REVIEW_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' and REVIEW_COUNT BETWEEN 501 AND 600 GROUP BY '600';
SELECT '700' AS REVIEW_RANGE, COUNT(*) AS REVIEW_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' and REVIEW_COUNT BETWEEN 601 AND 700 GROUP BY '700';
SELECT '800' AS REVIEW_RANGE, COUNT(*) AS REVIEW_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' and REVIEW_COUNT BETWEEN 701 AND 800 GROUP BY '800';
SELECT '900' AS REVIEW_RANGE, COUNT(*) AS REVIEW_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' and REVIEW_COUNT BETWEEN 801 AND 900 GROUP BY '900';
SELECT '1000' AS REVIEW_RANGE, COUNT(*) AS REVIEW_TOTAL FROM BUSINESS WHERE CITY = 'Las Vegas' and REVIEW_COUNT BETWEEN 901 AND 1000 GROUP BY '1000';

SELECT COUNT(*) FROM BUSINESS WHERE CITY = 'Las Vegas';


--QUERY 4: average rating across all users

SELECT AVG(AVERAGE_STARS) FROM USERS;

--QUERY 5: count distribution by average stars for users

SELECT AVG(REVIEW_COUNT) FROM USERS WHERE AVERAGE_STARS < 2;
SELECT AVG(REVIEW_COUNT) FROM USERS WHERE AVERAGE_STARS BETWEEN 2 AND 3;
SELECT AVG(REVIEW_COUNT) FROM USERS WHERE AVERAGE_STARS BETWEEN 3 AND 4;
SELECT AVG(REVIEW_COUNT) FROM USERS WHERE AVERAGE_STARS BETWEEN 4 AND 5;

--QUERY 6: user id based review analysis

SELECT AVG(STARS), to_char(REVIEW_DATE, 'YYYY') AS REVIEW_YEAR FROM REVIEWS WHERE USER_ID = 'kGgAARL2UmvCcTRfiscjug' GROUP BY to_char(REVIEW_DATE, 'YYYY') ORDER BY REVIEW_YEAR;





--ADD TO POWERPOINT
--learned stability of average reviews across the board (MAKE TABLEU)
SELECT AVG(AVERAGE_STARS) FROM USERS WHERE REVIEW_COUNT > 200;
SELECT AVG(AVERAGE_STARS) FROM USERS WHERE REVIEW_COUNT < 200;
--learned elite users have a stable review average didnt matter how many years
SELECT '1 YEAR' AS YEAR, COUNT(*), AVG(AVERAGE_STARS) FROM USERS WHERE LENGTH(ELITE) > 3 GROUP BY '1 YEAR';
SELECT '2 YEAR' AS YEAR, COUNT(*), AVG(AVERAGE_STARS) FROM USERS WHERE LENGTH(ELITE) < 3 GROUP BY '2 YEAR';




